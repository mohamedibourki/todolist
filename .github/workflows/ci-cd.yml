# Simplified CI/CD Pipeline for Vercel + Railway
# Only includes what you actually need for your hosted setup

name: CI/CD Pipeline

# Trigger on push to main branch
on:
  push:
    branches: [main]

jobs:
  # Test and Deploy Backend to Railway
  backend:
    name: Backend - Test & Deploy
    runs-on: ubuntu-latest

    # Use PostgreSQL for testing
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: server/package-lock.json

      - name: Install dependencies
        working-directory: ./server
        run: npm install

      - name: Create test environment
        working-directory: ./server
        run: |
          cat > .env << EOF
          DATABASE_HOST=localhost
          DATABASE_PORT=5432
          DATABASE_USER=postgres
          DATABASE_PASSWORD=postgres
          DATABASE_NAME=test_db
          PORT=8000
          EOF

      - name: Create production environment
        working-directory: ./server
        run: |
          cat > .env.production << EOF
          DATABASE_HOST=${{ secrets.DATABASE_HOST }}
          DATABASE_PORT=${{ secrets.DATABASE_PORT }}
          DATABASE_USER=${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
          DATABASE_NAME=${{ secrets.DATABASE_NAME }}
          PORT=8000
          EOF

      - name: Run tests
        working-directory: ./server
        run: npm run test

      - name: Build backend
        working-directory: ./server
        run: npm run build

      - name: Deploy to Railway
        if: github.ref == 'refs/heads/main'
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          npm install -g @railway/cli
          railway login --token $RAILWAY_TOKEN
          cd server
          # Copy production env file for deployment
          cp .env.production .env
          railway up --service backend

  # Test and Deploy Frontend to Vercel
  frontend:
    name: Frontend - Test & Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        working-directory: ./client
        run: npm install

      - name: Create environment file
        working-directory: ./client
        run: |
          cat > .env.local << EOF
          NEXT_PUBLIC_API_URL=https://todolist-production-c816.up.railway.app
          EOF

      - name: Run linting
        working-directory: ./client
        run: npm run lint

      - name: Build frontend
        working-directory: ./client
        run: npm run build

      - name: Deploy to Vercel
        if: github.ref == 'refs/heads/main'
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./client
          vercel-args: "--prod"
